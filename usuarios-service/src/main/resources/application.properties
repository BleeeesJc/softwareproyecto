# ============ APPLICATION ============
spring.application.name=usuarios-service
server.port=8081

# ============ JACKSON ============
spring.jackson.serialization.write-dates-as-timestamps=false
spring.config.import=optional:classpath:application-openapi.yml

# ============ MONGODB ============
spring.data.mongodb.uri=mongodb://jaredpimente1_db_user:DpCito170209@cluster0-shard-00-00.cibvezm.mongodb.net:27017,cluster0-shard-00-01.cibvezm.mongodb.net:27017,cluster0-shard-00-02.cibvezm.mongodb.net:27017/enseniamelo?ssl=true&replicaSet=atlas-abcdef-shard-0&authSource=admin&retryWrites=true&w=majority
spring.data.mongodb.database=enseniamelo

# ============ EUREKA CLIENT  ============
eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true
eureka.instance.lease-renewal-interval-in-seconds=30
eureka.instance.lease-expiration-duration-in-seconds=90


eureka.instance.hostname=usuarios-service

# ============ LOGGING ============
logging.level.org.springdoc=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.cloud.stream=DEBUG
logging.level.root=INFO

# ============ SPRING CLOUD STREAM ============
spring.cloud.function.definition=messageProcessor

# Bindings para eventos
spring.cloud.stream.bindings.usuarioCreado-out-0.destination=usuarios
spring.cloud.stream.bindings.usuarioCreado-out-0.content-type=application/json
spring.cloud.stream.bindings.usuarioCreado-out-0.producer.partition-key-expression=headers['partitionKey']
spring.cloud.stream.bindings.usuarioCreado-out-0.producer.partition-count=3

spring.cloud.stream.bindings.usuarioEliminado-out-0.destination=usuarios
spring.cloud.stream.bindings.usuarioEliminado-out-0.content-type=application/json
spring.cloud.stream.bindings.usuarioEliminado-out-0.producer.partition-key-expression=headers['partitionKey']
spring.cloud.stream.bindings.usuarioEliminado-out-0.producer.partition-count=3

spring.cloud.stream.bindings.messageProcessor-in-0.destination=usuarios
spring.cloud.stream.bindings.messageProcessor-in-0.content-type=application/json
spring.cloud.stream.bindings.messageProcessor-in-0.group=usuariosGroup

# Kafka
spring.cloud.stream.kafka.binder.brokers=kafka:9092
spring.cloud.stream.kafka.binder.defaultBrokerPort=9092
spring.cloud.stream.kafka.binder.auto-create-topics=true
spring.cloud.stream.kafka.binder.required-acks=1

# DLQ Configuration
spring.cloud.stream.kafka.bindings.messageProcessor-in-0.consumer.enable-dlq=true
spring.cloud.stream.kafka.bindings.messageProcessor-in-0.consumer.dlq-name=usuarios-dlq
spring.cloud.stream.kafka.bindings.messageProcessor-in-0.consumer.auto-commit-offset=false

# Retry Configuration
spring.cloud.stream.bindings.messageProcessor-in-0.consumer.max-attempts=3
spring.cloud.stream.bindings.messageProcessor-in-0.consumer.back-off-initial-interval=1000
spring.cloud.stream.bindings.messageProcessor-in-0.consumer.back-off-max-interval=10000
spring.cloud.stream.bindings.messageProcessor-in-0.consumer.back-off-multiplier=2.0

# Partitioning
spring.cloud.stream.kafka.bindings.messageProcessor-in-0.consumer.partition-count=3
spring.cloud.stream.kafka.bindings.messageProcessor-in-0.consumer.auto-rebalance-enabled=true

# ============ ACTUATOR (Health Check) ============
management.endpoints.web.exposure.include=health,info,bindings,env
management.endpoint.health.show-details=always
management.health.mongo.enabled=true
spring.cloud.stream.bindings.health.enabled=true